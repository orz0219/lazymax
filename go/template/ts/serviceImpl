@Slf4j
@Service
public class {{.Class}}ServiceImpl implements {{.Class}}Service{

    //redis
    @Resource
    private StringRedisTemplate template;

    /* *
     * @description: 灌入{{.Des}}
     * @author: : wangxingchao
     * @create: {{.CreateTime}}
     */
    @Override
    public ApiResponse<Boolean> mount{{.Class}}() {
        ApiResponse result = rmt();
        List dataList = result.getData();
        if (dataList == null) {
            return ApiResponse.tunnel(result.getCode(), false);
        }
        template.opsForValue().set(RedisKeyConsts.PROMOTION_XXX_LIST, JSON.toJSONString(dataList),
                1, TimeUnit.MINUTES);
        log.debug("***灌入{{.Des}} 完成..." + DateUtil.dateFormat(new Date(), DateUtil.DATE_TIME_PATTERN));
        return ApiResponse.success(true);
    }

    /* *
     * @description: 获取{{.Des}}
     * @author: : wangxingchao
     * @create: {{.CreateTime}}
     */
    @Override
    public ApiResponse<{{.Out}}> {{.LowClass}}({{.In}} in) {
        String result = template.opsForValue().get(RedisKeyConsts.PROMOTION_XXX_LIST);
        {{.Out}} out = JSON.parseObject(result, {{.Out}}.class);
        return ApiResponse.success(out);
    }
}